# This file contains the three mandatory stubs required by the
# diego generate-deployment-manifest script.  It also includes
# properties we merge after generate-deployment-manifest has
# been run.

meta:
  zones:
    z1: AVAILABILITY_ZONE_1
    z2: AVAILABILITY_ZONE_2
    z3: AVAILABILITY_ZONE_3

### iaas-settings stub

iaas_settings:
  subnet_configs:
    - name: diego1
      subnets:
        - range: 10.0.0.0/24
          reserved:
            - 10.0.0.3-10.0.0.4
          static: []
          gateway: 10.0.0.2
          dns:
            - 8.8.8.8
            - 8.8.4.4
          cloud_properties:
            security_groups: sg-xxxxxxxx
            subnet: subnet-xxxxxxxx
    - name: diego2
      subnets:
        - range: 10.0.1.0/24
          reserved:
            - 10.0.1.3-10.0.1.4
          static: []
          gateway: 10.0.1.2
          dns:
            - 8.8.4.4
            - 8.8.8.8
          cloud_properties:
            security_groups: sg-xxxxxxxx
            subnet: subnet-xxxxxxxx
    - name: diego3
      subnets: []
    - name: diego-vizzini
      subnets: (( merge || nil ))
    - name: diego-benchmarks
      subnets: (( merge || nil ))
  disk_pools:
    - name: database_disks
      <<: (( merge ))
      cloud_properties:
        <<: (( merge ))
        type: gp2
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: latest
  compilation_cloud_properties:
    availability_zone: (( meta.zones.z1 ))
    ephemeral_disk:
      encrypted: true
      size: 30000
      type: gp2
    instance_type: c3.large
    network: diego1
    reuse_compilation_vms: true
    workers: 5
  resource_pool_cloud_properties:
    - name: access_z1
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z1 ))
        instance_type: m3.medium
    - name: access_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: m3.medium
    - name: access_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: m3.medium
    - name: brain_z1
      cloud_properties:
        availability_zone: (( meta.zones.z1 ))
        <<: (( merge ))
        instance_type: m3.medium
    - name: brain_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: m3.medium
    - name: brain_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: m3.medium
    - name: cc_bridge_z1
      cloud_properties:
        availability_zone: (( meta.zones.z1 ))
        <<: (( merge ))
        instance_type: m3.medium
    - name: cc_bridge_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: m3.medium
    - name: cc_bridge_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: m3.medium
    - name: cell_z1
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z1 ))
        instance_type: r3.xlarge
    - name: cell_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: r3.xlarge
    - name: cell_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: r3.xlarge
    - name: colocated_z1
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z1 ))
        instance_type: r3.xlarge
    - name: colocated_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: r3.xlarge
    - name: colocated_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: r3.xlarge
    - name: database_z1
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z1 ))
        instance_type: m3.large
    - name: database_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: m3.large
    - name: database_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: m3.large
    - name: route_emitter_z1
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z1 ))
        instance_type: m3.medium
    - name: route_emitter_z2
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z2 ))
        instance_type: m3.medium
    - name: route_emitter_z3
      cloud_properties:
        <<: (( merge ))
        availability_zone: (( meta.zones.z3 ))
        instance_type: m3.medium
    - name: errand
      cloud_properties:
        <<: (( merge || nil ))
        availability_zone: (( meta.zones.z1 ))
        instance_type: m3.medium

### sql stub

sql_overrides:
  bbs:
    db_connection_string: 'postgres://USER:PASS@HOST/diego'
    db_driver: postgres
    max_open_connections: 500
    require_ssl: true
    # The following is http://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
    ca_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----

### property-overrides stub

property_overrides:
  converger:
    log_level: debug
  bbs:
    active_key_label: SOME-KEY-NAME
    encryption_keys:
      - label: SOME-KEY-NAME
        passphrase: STRONG_PASSPHRASE
    require_ssl: true
    ca_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    server_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    server_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    client_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    client_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
  executor:
    drain_timeout_in_seconds: 0
    garden:
      network: tcp
      address: 127.0.0.1:7777
    log_level: debug
  garden:
    listen_network: tcp
    listen_address: 0.0.0.0:7777
    log_level: debug
  nsync:
    log_level: debug
  rep:
    evacuation_timeout_in_seconds: 60
    log_level: debug
  route_emitter:
    log_level: debug
  skip_cert_verify: true
  ssh_proxy:
    require_ssl: true
    host_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    enable_cf_auth: true
    enable_diego_auth: false
    uaa_secret: STRONG_SECRET
